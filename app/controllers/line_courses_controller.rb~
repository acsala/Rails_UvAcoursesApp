class LineCoursesController < ApplicationController
  before_action :set_line_course, only: [:show, :edit, :update, :destroy]

  # GET /line_courses
  # GET /line_courses.json
  def index
    @line_courses = LineCourse.all
  end

  # GET /line_courses/1
  # GET /line_courses/1.json
  def show
  end

  # GET /line_courses/new
  def new
    @line_course = LineCourse.new
  end

  # GET /line_courses/1/edit
  def edit
  end

  # POST /line_courses
  # POST /line_courses.json
  
  def create
  		#find the shopping cart for the current session (creating one if there isnâ€™t one there already), add the selected product to that cart, and 				display the cart contents
    @cart = current_cart
    #use the params object to get the :product_id parameter from the request
		
		course = Course.find(params[:course_id])
		
		#pass that product we found into @cart.line_items.build. This causes a new line item relationship to be built between the @cart object and the 			product
		@line_course = @cart.shopping_course(course.id)

    respond_to do |format|
      if @line_course.save
        #format.html { redirect_to(@line_course.cart,
        #:notice => 'Line item was successfully created.') }
        
        # redirect the browser back to the index insted of individual carts
        format.html { redirect_to(@line_course.cart) }
        
        format.xml  { render :xml => @line_course,
        :status => :created, :location => @line_course }
      else
        format.html { render :action => "new" }
        format.xml  { render :xml => @line_course.errors,
        :status => :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /line_courses/1
  # PATCH/PUT /line_courses/1.json
  def update
    respond_to do |format|
      if @line_course.update(line_course_params)
        format.html { redirect_to @line_course, notice: 'Line course was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: 'edit' }
        format.json { render json: @line_course.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /line_courses/1
  # DELETE /line_courses/1.json
  def destroy
    @line_course.destroy
    respond_to do |format|
      format.html { redirect_to line_courses_url }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_line_course
      @line_course = LineCourse.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def line_course_params
      params.require(:line_course).permit(:course_id, :cart_id)
    end
    
    private
    # Use callbacks to share common setup or constraints between actions.
    def set_course
      @course = Course.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def course_params
      params.require(:course).permit(:Name, :Ects, :Institute, :Programme, :Description)
    end
end
